version: 0.2

env:
  variables:
    DOCKERHUB_USER: "tie304628"
  parameter-store:
    DOCKERHUB_PASS: "${BASE_PARAMETER_STORE_PATH}/build/dockerhub_pass"

phases:
  # install:
  #   commands:
  #     - echo Installing alembic...
  #     - pip install --disable-pip-version-check --no-cache-dir -r requirements.txt
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --region $AWS_DEFAULT_REGION ecr get-login-password | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo Logging in to Docker Hub...
      # Docker Hubのダウンロード回数制限を回避するために認証する。
      - echo $DOCKERHUB_PASS | docker login -u $DOCKERHUB_USER --password-stdin
      - IMAGE_TAG=$CODEBUILD_RESOLVED_SOURCE_VERSION
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      # DBマイグレーションをする場合はロールバック戦略を考慮する必要あり
      # - echo Running database migrations...
      # - alembic upgrade head
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      # - aws ssm put-parameter --name "${BASE_PARAMETER_STORE_PATH}/app/image_tag" --value "$IMAGE_TAG" --type String --overwrite
      - printf '[{"name":"app","imageUri":"%s"}]' $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG  > imagedefinitions.json

artifacts:
  files:
    # 参照: https://docs.aws.amazon.com/ja_jp/codepipeline/latest/userguide/file-reference.html
    - imagedefinitions.json
